---
- name: api deploy
  hosts: west
  remote_user: hank
  vars:
    workdir: /home/hank/code/src/github.com/aliencyborg/big-time-api
  tasks:
    - name: ensure code/src/github.com/aliencyborg directory is present
      file:
        path: /home/hank/code/src/github.com/aliencyborg
        state: directory
      tags: [ prod, stage ]

    ## STAGE ##

    - name: clone or update big-time-api repository (stage)
      git:
        accept_hostkey: yes
        dest: "{{ workdir }}"
        key_file: /home/hank/.ssh/id_rsa
        repo: 'git@github.com:aliencyborg/big-time-api.git'
        update: yes
        version: stage
      retries: 2
      tags: stage

    - name: copy stage.env to remote folder
      copy:
        src: stage.env
        dest: "{{ workdir }}/stage.env"
      tags: stage

    - name: ensure mongo data container (stage)
      docker_container:
        image: mongo:3.4
        name: big-time-stage-db-data
        state: stopped
      tags: stage

    - name: run mongo db container (stage)
      docker_container:
        image: mongo:3.4
        name: big-time-stage-db
        restart_policy: always
        state: started
        volumes_from:
          - big-time-stage-db-data
      tags: stage

    - name: build docker image (stage)
      docker_image:
        force_source: yes
        name: big-time-api
        source: build
        tag: stage
        build:
          path: "{{ workdir }}"
          pull: no
      tags: stage

    - name: run api container (stage)
      docker_container:
        env_file: "{{ workdir }}/stage.env"
        image: big-time-api:stage
        name: big-time-api-stage
        restart: yes
        restart_policy: always
        state: started
        env:
          NODE_ENV: 'production'
          LETSENCRYPT_HOST: 'api.bigtime.aliencyb.org'
          MONGO_HOST: 'mongodb://mongo/big-time'
          MONGO_PORT: '27017'
          PORT: '4040'
          VIRTUAL_HOST: 'api.bigtime.aliencyb.org'
          VIRTUAL_PORT: '4040'
        links:
          - 'big-time-stage-db:mongo'
      tags: stage

    ## PRODUCTION ##

    - name: clone or update big-time-api repository (prod)
      git:
        accept_hostkey: yes
        dest: "{{ workdir }}"
        key_file: /home/hank/.ssh/id_rsa
        repo: 'git@github.com:aliencyborg/big-time-api.git'
        update: yes
        version: prod
      retries: 2
      tags: prod

    - name: copy prod.env to remote folder
      copy:
        src: prod.env
        dest: "{{ workdir }}/prod.env"
      tags: prod

    - name: ensure mongo data container (prod)
      docker_container:
        image: mongo:3.4
        name: big-time-db-data
        state: stopped
      tags: prod

    - name: run mongo db container (prod)
      docker_container:
        image: mongo:3.4
        name: big-time-db
        restart_policy: always
        state: started
        volumes_from:
          - big-time-db-data
      tags: prod

    - name: build docker image (prod)
      docker_image:
        force_source: yes
        name: big-time-api
        source: build
        tag: prod
        build:
          path: "{{ workdir }}"
          pull: no
      tags: prod

    - name: run api container (prod)
      docker_container:
        env_file: "{{ workdir }}/prod.env"
        image: big-time-api:prod
        name: big-time-api
        restart: yes
        restart_policy: always
        state: started
        env:
          NODE_ENV: 'production'
          LETSENCRYPT_HOST: 'api.bigtime.shangri-lashow.com'
          MONGO_HOST: 'mongodb://mongo/big-time'
          MONGO_PORT: '27017'
          PORT: '4040'
          VIRTUAL_HOST: 'api.bigtime.shangri-lashow.com'
          VIRTUAL_PORT: '4040'
        links:
          - 'big-time-db:mongo'
      tags: prod
